Unix & Linux p.325

Documentation:
https://docs.aws.amazon.com

______________________________________________________________________________________________________________

IAM (Identity and Access Management)            #https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction.html
-management of users and their permissions
-IAM users that not separated account but users with own creditentials inside root account
-AIM groups - set permission to groups, users can be in many groups, users inhertes permissons from group and can have own permissions

IAM Policies - created to give permissions for users, groups and roles:
-Managed (independent, can be attached to multiple users), AWS managed and customer managed
-Inline (created by you, set (embeded) to single user, group or role)

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Amazon Resource Names (ARN) - unique name of resource (eg. VM) given after creation

arn:[PARTITION]:[SERVICE]:[REGION]:[ACCOUNT_ID]:[RESOURCE_TYPE]/[RESOURCE]
arn:aws:iam:123456789012:user/Bob       # iam use global region (aws-us-gov)


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

IAM JSON Policy elements:
https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html

{
    "Version" : "2012-10-17"    # older (default) version "2008-10-17"
    "Statement" : [             # required, main element for policy 
        {
            "Principal" : {"AWS":["arn:aws:iam:12345678912:root"]}
            "Effect" : "Allow",                             # allow or deny
            "Action" : "["s3":"PutObject"]",                # what wil be allow or deny, "NotAction" - matches everythong without given value
            "Resource" : "arn:aws:s3:::examplebucket/*",    # what the "Statement" covers (ARN), "NotResource" - matches everyting excluding given value
            
            "Sid" : "AllowFullAccessToAllAWSResorces",                      # Statement id (Optional), must be unique in policy
            "Condition" : {"IpAddress":{"aws:sourceIp":"192.0.2.0/24"}}     # Optional, specify when policy is affect - condition (boolean) must be fully (equal, less then etc)
        }
    ]
}

Policies can be resource-based (eg. particular EC2 vm) or identity-based (eg. user).

Policy logic:
-is is only one deny - answer deny
-if is only one allow - answer allow
-if there is no allow - answer deny

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

IAM Role - similar to user (has permission policy) but not specified person. For everyone who needs it (temporary creditentials). 
Trust policy - who can assume the role (principal element). May it be service (EC2) or user or account. Action: "sts:AssumeRole"

"Principal" : {"AWS":["arn:aws:iam:12345678912:root"]}      #inside statement

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

.aws/credentials file (used in Ansible, awscli):
[default]
AWS_ACCESS_KEY_ID=[VALUE]
AWS_SECRET_ACESS_KEY=[VALUE]

______________________________________________________________________________________________________________

VPC - virtual private cloud

Virtual, private network that uses the same concepts as on premise networking.
Allows of control of network config (IP subnets, routing tables, access lists). 
Ability to isolate and expose resources inside VPC. 
Sevral layers of controls. Services inherit security from VPC. 

Services are deployed in VPC.
Multiple VPCs per account. 
VPCs lives within (w ramach) a region and has own addressing (eg. 10.0.0./16)

-Availability zones - on-premise datacenters within one region.
-Subnets - divides VPC. Public (connected to IGW) and private (connected to NAT). Used for connecting Availibility Zones. Must be a aubset of the core VPC subnet.
-Route tables - used to control traffic out of subnets. 
-Internet Gateway (IGW) - allows access to internet from VPC.
-Virtual Private Gateway (VGW) - VPN gateway
-NAT Gateway - allows private subnet resources access to internet
-Security group - firewall attached to resource (EC2 VM)
-Network ACcess List (NACL) - firewall for subnets, read from lower to higher number (stateless)

______________________________________________________________________________________________________________




AMI - Amazon Machine Images (obrazy)

Security group - networking (firewall) for ec2 instance (like os firewall, Network ACL is fos subnet)

Ec2 pricing
on demand - rozliczanie minutowe

reserved - oplata z gory, deklaracja czasu, duze rabaty

spot? - aukcja, deklarujemy ile chcemy zapłacić za kolejny miesiac. jezeli nie wystarzy maszyna jest kasowana
used to jenkins lub teamcity 

AWS CloudFormation - Like terraform?
AWS OpsWorks - like Ansible
AWS Cloud9 - cloud IDE (VS Code)
AWS CodeBuild - like Jenkins (AWS CodeBuild is a fully managed build service that automatically compiles source code, runs tests, and produces software packages. )
AWS CodeCommit - like GitHub
AWS CodePipeline - like Jenkins (AWS CodePipeline is a continuous delivery service that enables you to model, visualize, and automate the steps required to release your software. )
AWS CodeDeploy - Deplying automation
Amazon Elastic Container service (Amazon ECS) - like Kubernetes
AWS Cloud Development Kit (AWS CDK)  - programming framework for creating IaaC. AWS CDK is a compiler that compiles your source code into an AWS CloudFormation template. 

Monitoring:
AWS X-Ray is a distributed tracing system. It helps you analyze and debug your distributed applications, such as those built using microservices, or serverless architecture. It provides an end-to-end view of requests as they travel through your application, and shows a map of your application`s underlying components.
Amazon CloudWatch is a monitoring and management service that provides data and actionable insights for AWS, hybrid, and on-premises applications and infrastructure resources. With CloudWatch, you can track resources and application performance, collect and monitor log files, troubleshoot, and set alarm notifications.
AWS Config is a service that enables you to assess, audit, and evaluate the configurations of your AWS resources. AWS Config continuously monitors and records your AWS resource configurations. It enables you to automate the evaluation of recorded configurations against desired configurations. 
AWS CloudTrail is a service that enables governance, compliance, operational auditing, and risk auditing of your AWS account. With CloudTrail, you can log, continuously monitor, and retain account activity related to actions across your AWS infrastructure. CloudTrail provides event history of your AWS account activity, including actions taken through the AWS Management Console, AWS SDKs, command line tools, and other AWS services. This event history simplifies security analysis, resource change tracking, and troubleshooting. In addition, you can use CloudTrail to detect unusual activity in your AWS accounts. These capabilities help simplify operational analysis and troubleshooting.


EBS - local storage (volumes and snapshots)

S3 simple storage service

S3 bucket miejsce gdzie przechowujemy foldery i pliki (S3 objects) 

Bucket - główny folder
Podkatalogi - foldery
Obiekty

Pliki przechowujemy w regionie najbliższym nam (klientowi) fizycznie (latency). 

Zazwyczaj wymagany ten sam region co ec2. 

Klasy obiektów, różna cena zależna od czasu dostępu, czasu niedostępności, Ilości replikacji. Klasa pliku /folderu może być zmieniona w każdej chwili. 

Klasa standard - najdroższa. 

Lifecycles - automatyczna migracja obiektu do innej klasy lub jego usunięcie. 

Zasady mogą być stosowane do całego bucket, folderów lub obiektów. Zasadę po utworzeniu trzeba aktywować. 

Wersjonowanie - włączane z poziomu bucketu, nie można wyłączyć (jedynie zawiesic). Wersjonowanie odnosi sie do adresow url plikow. 


AWS CLI!!!

BOTO3 - API do AWSa

RDS - SQL relacyjna Relational Database Service (rows and columns)
Amazon Aurora - compatible with MySQL & PostgreSQL (engine choose)
Mariadb
PostgresQL
Oracle
MS SQL

Must create a subnte group and choose subnet for db and vpc.

DynamoDB - NoSQL (no engine choose) key:value like json
MongoDB
Cassandra

MySQL Workbench
Connection to mySQL over ssh
 
SNS -Simple Notification service
Publisher - komunikacja 
Subscriber - webserwisy, które informuja o zdarzeniu

Tutaj sie konfiguruje rodzaje powiadomien i odbiorcow.

Topic - label, grupa ktora definiuje nasze endpointy w wiadomosci definiowanej
Subscription - miejsce gdzie ma wyslac wiadomosc (email, telefon)
Publisher - czlowiek ,alar, event ktory generuje lub zbiera to co ma byc wyslane

CloudWatch
Usługa, ktora pozwala monitorowwac wszystkie usługi (zasoby) AWS w czasie rzeczywistym. Metryki mozna katalogowac oraz wychwytywac punkty do powiadomień. 

CloudWatch moze rozszerzyc parametry wirtualki EC2 w razie wystąpienia większego obciążenia. 

Opłaty sa zależne od regionu.

Dashbord - cos jak grafana? Wykresy zuzycia CPU itp.

Alarms - powiadomienia do SNS

CloudTrail - serwis, ktory sprawdza kto wykonal jakie czynnosci na koncie AWS. AWS Account Audit.

Autoscaling - free

Route 53 - dns, domeny, health check

Cloud Front - pliki statyczne content do stron (works in all regions)

Lambda - wykonywanie naszego kodu (funkcji) na infrastrukturze AWS, płacimy tylko za każdorazowe użycie kodu
Function will start when:
-message came to queue
-new object in bucket
-http request came


Paas - run your code on cloud infrastructure
Google app Engine
Elastic Beanstalk (AWS)